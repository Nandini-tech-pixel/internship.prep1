class Dog:
 def __init__(self, name):
  self.name = name
def bark(self):
 print(f"{self.name} says woof!")
d = Dog("Buddy")
d.bark() 

#ANS1
class Car:
    def __init__(self, model, year):
        self.model = model
        self.year = year

    def display_info(self):
        print(f"Car Model: {self.model}")
        print(f"Year: {self.year}")

car1 = Car("Toyota Corolla", 2020)
car1.display_info()

class User:
 def __init__(self, name, age):
  self.name = name
  self.age = age
u = User("Nina", 22)
print(u.name, u.age)

#ANS2
class Book:
    def __init__(self, title, author, year):
        self.title = title
        self.author = author
        self.year = year

    def display_info(self):
        print(f"Title : {self.title}")
        print(f"Author: {self.author}")
        print(f"Year  : {self.year}")
book1 = Book("1984", "George Orwell", 1949)
book1.display_info()



class Bank:
 def __init__(self, balance):
  self.balance = balance
def deposit(self, amount):
 self.balance += amount
b = Bank(100)
b.deposit(50)
print(b.balance) 

#ANS3
class Bank:
    def __init__(self, account_holder, balance):
        self.account_holder = account_holder
        self.balance = balance

    def withdraw(self, amount):
        if amount <= self.balance:
            self.balance -= amount
            print(f"Withdrawn ₹{amount}. New balance: ₹{self.balance}")
        else:
            print("Insufficient balance.")
account = Bank("Nandini", 5000)
account.withdraw(1500)   
account.withdraw(4000)

class Movie:
 def __init__(self, title):
  self.title = title
def __str__(self):
 return f"Movie: {self.title}"
m = Movie("Oppenheimer")
print(m)

#ANS4
class Book:
    def __init__(self, title, author, year):
        self.title = title
        self.author = author
        self.year = year

    def __str__(self):
        return f"'{self.title}' by {self.author} ({self.year})"
book1 = Book("To Kill a Mockingbird", "Harper Lee", 1960)
print(book1)

#Mini Project
class BankAccount:
    def __init__(self, account_holder, balance=0):
        self.account_holder = account_holder
        self.balance = balance

    def deposit(self, amount):
        if amount > 0:
            self.balance += amount
            print(f"₹{amount} deposited. New balance: ₹{self.balance}")
        else:
            print("Deposit amount must be positive.")

    def withdraw(self, amount):
        if amount > self.balance:
            print("Insufficient balance.")
        elif amount <= 0:
            print("Withdrawal amount must be positive.")
        else:
            self.balance -= amount
            print(f"₹{amount} withdrawn. New balance: ₹{self.balance}")

    def display_balance(self):
        print(f"Account holder: {self.account_holder}")
        print(f"Current balance: ₹{self.balance}")
account = BankAccount("Nandini", 1000)
account.deposit(500)
account.withdraw(300)
account.display_balance()
